{
  "currentIndex": 3,
  "tabs": [
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": "你的名字是 openmcp"
        },
        "messages": [
          {
            "role": "user",
            "content": "请问你的名字是什么"
          },
          {
            "role": "assistant",
            "content": "我的名字是 **OpenMCP**（Open Multi-modal Cognitive Platform）。  \n\n我是由 **深度求索（DeepSeek）** 开发的一款 **多模态认知大模型**，能够处理文本、图像、文档等多种信息，并具备强大的理解和推理能力。  \n\n你可以叫我 **OpenMCP**，或者简称 **MCP**！😊 有什么我可以帮你的吗？"
          }
        ]
      }
    },
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "messages": [
          {
            "role": "user",
            "content": "杭州今天的气温如何"
          },
          {
            "role": "assistant",
            "content": "要获取杭州今天的最新气温信息，你可以通过以下几种方式实时查询：\n\n1. **天气应用/网站**  \n   - 打开手机上的天气应用（如苹果天气、墨迹天气等），搜索“杭州”。\n   - 访问中国天气网（[www.weather.com.cn](http://www.weather.com.cn)）或国际服务（如AccuWeather、Weather.com）。\n\n2. **搜索引擎**  \n   在百度、谷歌等搜索“杭州今日天气”，结果页通常会直接显示当前气温和预报。\n\n3. **语音助手**  \n   对手机说“Hey Siri”或“小爱同学，杭州今天多少度？”快速获取答案。\n\n**提示**：气温可能因城区/郊区差异略有不同，建议查看实时更新数据。如果需要更详细的天气信息（如湿度、降水概率），上述方法也可提供。\n\n（由于我无法实时联网，暂不能提供此刻的具体温度，请见谅！）"
          },
          {
            "role": "user",
            "content": "我的上一个问题是什么"
          },
          {
            "role": "assistant",
            "content": "你上一个问题是：  \n**“杭州今天的气温如何”**  \n\n而我的回答中已说明，由于无法实时联网，建议你通过天气应用或搜索引擎获取最新数据。需要我帮你回顾其他内容吗？ 😊"
          }
        ],
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": ""
        }
      }
    },
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "messages": [
          {
            "role": "user",
            "content": "如何在 typescript 项目中使用 markdown-it"
          },
          {
            "role": "assistant",
            "content": "# 在 TypeScript 项目中使用 markdown-it\n\nmarkdown-it 是一个流行的 Markdown 解析器，可以很方便地在 TypeScript 项目中使用。以下是完整的配置和使用指南：\n\n## 1. 安装依赖\n\n首先安装 markdown-it 及其 TypeScript 类型定义：\n\n```bash\nnpm install markdown-it\nnpm install --save-dev @types/markdown-it\n```\n\n## 2. 基本使用\n\n创建一个 TypeScript 文件（如 `markdown.ts`）并添加以下代码：\n\n```typescript\nimport MarkdownIt from 'markdown-it';\n\n// 创建 markdown-it 实例\nconst md = new MarkdownIt();\n\n// 渲染 Markdown 字符串\nconst result = md.render('# Hello markdown-it in TypeScript!');\nconsole.log(result);\n```\n\n## 3. 配置选项\n\n你可以自定义 markdown-it 的配置：\n\n```typescript\nconst md = new MarkdownIt({\n  html: true,         // 启用 HTML 标签\n  linkify: true,       // 自动将 URL 转换为链接\n  typographer: true,   // 启用排版美化\n  breaks: true        // 将换行符转换为 <br>\n});\n```\n\n## 4. 添加插件\n\nmarkdown-it 有许多插件可以扩展功能。例如添加 markdown-it-anchor：\n\n```bash\nnpm install markdown-it-anchor\nnpm install --save-dev @types/markdown-it-anchor\n```\n\n然后在代码中使用：\n\n```typescript\nimport MarkdownIt from 'markdown-it';\nimport anchor from 'markdown-it-anchor';\n\nconst md = new MarkdownIt().use(anchor, {\n  permalink: true,\n  permalinkBefore: true\n});\n\nconst result = md.render('# Section Title\\n\\nSome content');\nconsole.log(result);\n```\n\n## 5. 自定义渲染规则\n\n你可以覆盖默认的渲染规则：\n\n```typescript\nconst md = new MarkdownIt();\n\n// 覆盖默认的链接渲染\nmd.renderer.rules.link_open = (tokens, idx, options, env, self) => {\n  const token = tokens[idx];\n  token.attrSet('target', '_blank');\n  token.attrSet('rel', 'noopener noreferrer');\n  return self.renderToken(tokens, idx, options);\n};\n\nconst result = md.render('[Open in new tab](https://example.com)');\n```\n\n## 6. 在 React/Vue 等框架中使用\n\n### 在 React 中使用：\n\n```typescript\nimport React from 'react';\nimport MarkdownIt from 'markdown-it';\n\nconst md = new MarkdownIt();\n\nconst MarkdownRenderer: React.FC<{ content: string }> = ({ content }) => {\n  return <div dangerouslySetInnerHTML={{ __html: md.render(content) }} />;\n};\n\n// 使用\n<MarkdownRenderer content=\"# Hello React with markdown-it\" />\n```\n\n### 在 Vue 中使用：\n\n```typescript\nimport { defineComponent } from 'vue';\nimport MarkdownIt from 'markdown-it';\n\nconst md = new MarkdownIt();\n\nexport default defineComponent({\n  props: ['content'],\n  setup(props) {\n    return () => (\n      <div domPropsInnerHTML={md.render(props.content)} />\n    );\n  }\n});\n```\n\n## 7. 处理安全性\n\n如果需要处理用户输入的 Markdown，建议使用 markdown-it-sanitizer 或其他安全插件：\n\n```bash\nnpm install markdown-it-sanitizer\n```\n\n```typescript\nimport MarkdownIt from 'markdown-it';\nimport sanitizer from 'markdown-it-sanitizer';\n\nconst md = new MarkdownIt().use(sanitizer);\n```\n\n## 8. 完整示例\n\n下面是一个完整的 TypeScript 类示例：\n\n```typescript\nimport MarkdownIt from 'markdown-it';\nimport anchor from 'markdown-it-anchor';\nimport sanitizer from 'markdown-it-sanitizer';\n\nclass MarkdownRenderer {\n  private md: MarkdownIt;\n\n  constructor() {\n    this.md = new MarkdownIt({\n      html: true,\n      linkify: true,\n      typographer: true\n    })\n    .use(anchor)\n    .use(sanitizer);\n  }\n\n  public render(markdown: string): string {\n    return this.md.render(markdown);\n  }\n\n  public renderInline(markdown: string): string {\n    return this.md.renderInline(markdown);\n  }\n}\n\n// 使用示例\nconst renderer = new MarkdownRenderer();\nconst html = renderer.render('# Title\\n\\nSome *markdown* content');\nconsole.log(html);\n```\n\n通过以上步骤，你就可以在 TypeScript 项目中轻松使用 markdown-it 来解析和渲染 Markdown 内容了。"
          },
          {
            "role": "assistant",
            "content": "康托洛维奇不等式（Kantorovich Inequality）的数学公式为：\n\n对于正定矩阵 \\( A \\) 和任意非零向量 \\( x \\)，有\n\n\\[\n\\frac{(x^\\top A x)(x^\\top A^{-1} x)}{(x^\\top x)^2} \\leq \\frac{(\\lambda_{\\max} + \\lambda_{\\min})^2}{4 \\lambda_{\\max} \\lambda_{\\min}},\n\\]\n\n其中 \\( \\lambda_{\\max} \\) 和 \\( \\lambda_{\\min} \\) 分别是矩阵 \\( A \\) 的最大和最小特征值。"
          },
          {
            "role": "assistant",
            "content": "调和平均数（Harmonic Mean）的数学公式为：\n\n对于正数 \\( x_1, x_2, \\dots, x_n \\)，调和平均数 \\( H \\) 定义为：\n\n\\[\nH = \\frac{n}{\\frac{1}{x_1} + \\frac{1}{x_2} + \\cdots + \\frac{1}{x_n}}.\n\\]"
          }
        ],
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": ""
        }
      }
    },
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "messages": [
          {
            "role": "user",
            "content": "简述康托洛维奇不等式，只需要给出数学公式，不需要给出额外的解释"
          },
          {
            "role": "assistant",
            "content": "康托洛维奇不等式（Kantorovich Inequality）的数学公式为：\n\n对于正定矩阵 \\( A \\) 和任意非零向量 \\( x \\)，有\n\n\\[\n\\frac{(x^\\top A x)(x^\\top A^{-1} x)}{(x^\\top x)^2} \\leq \\frac{(\\lambda_{\\max} + \\lambda_{\\min})^2}{4 \\lambda_{\\max} \\lambda_{\\min}},\n\\]\n\n其中 \\( \\lambda_{\\max} \\) 和 \\( \\lambda_{\\min} \\) 分别是矩阵 \\( A \\) 的最大和最小特征值。"
          },
          {
            "role": "user",
            "content": "请简述调和平均数"
          },
          {
            "role": "assistant",
            "content": "调和平均数（Harmonic Mean）是 \\( n \\) 个正数 \\( x_1, x_2, \\dots, x_n \\) 的平均数的一种形式，定义为：  \n\n\\[\nH = \\frac{n}{\\frac{1}{x_1} + \\frac{1}{x_2} + \\cdots + \\frac{1}{x_n}}.\n\\]\n\n它适用于计算**速率、比例**等涉及**倒数关系**的平均值，例如平均速度、并联电阻等。调和平均数总是**不大于算术平均数**（\\( H \\leq G \\leq A \\)，其中 \\( G \\) 是几何平均数，\\( A \\) 是算术平均数）。"
          }
        ],
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": ""
        }
      }
    }
  ]
}