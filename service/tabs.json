{
  "currentIndex": 3,
  "tabs": [
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": "你的名字是 openmcp"
        },
        "messages": [
          {
            "role": "user",
            "content": "请问你的名字是什么"
          },
          {
            "role": "assistant",
            "content": "我的名字是 **OpenMCP**（Open Multi-modal Cognitive Platform）。  \n\n我是由 **深度求索（DeepSeek）** 开发的一款 **多模态认知大模型**，能够处理文本、图像、文档等多种信息，并具备强大的理解和推理能力。  \n\n你可以叫我 **OpenMCP**，或者简称 **MCP**！😊 有什么我可以帮你的吗？"
          }
        ]
      }
    },
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "messages": [
          {
            "role": "user",
            "content": "杭州今天的气温如何"
          },
          {
            "role": "assistant",
            "content": "要获取杭州今天的最新气温信息，你可以通过以下几种方式实时查询：\n\n1. **天气应用/网站**  \n   - 打开手机上的天气应用（如苹果天气、墨迹天气等），搜索“杭州”。\n   - 访问中国天气网（[www.weather.com.cn](http://www.weather.com.cn)）或国际服务（如AccuWeather、Weather.com）。\n\n2. **搜索引擎**  \n   在百度、谷歌等搜索“杭州今日天气”，结果页通常会直接显示当前气温和预报。\n\n3. **语音助手**  \n   对手机说“Hey Siri”或“小爱同学，杭州今天多少度？”快速获取答案。\n\n**提示**：气温可能因城区/郊区差异略有不同，建议查看实时更新数据。如果需要更详细的天气信息（如湿度、降水概率），上述方法也可提供。\n\n（由于我无法实时联网，暂不能提供此刻的具体温度，请见谅！）"
          },
          {
            "role": "user",
            "content": "我的上一个问题是什么"
          },
          {
            "role": "assistant",
            "content": "你上一个问题是：  \n**“杭州今天的气温如何”**  \n\n而我的回答中已说明，由于无法实时联网，建议你通过天气应用或搜索引擎获取最新数据。需要我帮你回顾其他内容吗？ 😊"
          }
        ],
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": ""
        }
      }
    },
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "messages": [
          {
            "role": "user",
            "content": "简述康托洛维奇不等式，只需要给出数学公式，不需要给出额外的解释"
          },
          {
            "role": "assistant",
            "content": "康托洛维奇不等式（Kantorovich Inequality）的数学公式为：\n\n对于正定矩阵 \\( A \\) 和任意非零向量 \\( x \\)，有\n\n\\[\n\\frac{(x^\\top A x)(x^\\top A^{-1} x)}{(x^\\top x)^2} \\leq \\frac{(\\lambda_{\\max} + \\lambda_{\\min})^2}{4 \\lambda_{\\max} \\lambda_{\\min}},\n\\]\n\n其中 \\( \\lambda_{\\max} \\) 和 \\( \\lambda_{\\min} \\) 分别是矩阵 \\( A \\) 的最大和最小特征值。"
          },
          {
            "role": "user",
            "content": "请简述调和平均数"
          },
          {
            "role": "assistant",
            "content": "调和平均数（Harmonic Mean）是 \\( n \\) 个正数 \\( x_1, x_2, \\dots, x_n \\) 的平均数的一种形式，定义为：  \n\n\\[\nH = \\frac{n}{\\frac{1}{x_1} + \\frac{1}{x_2} + \\cdots + \\frac{1}{x_n}}.\n\\]\n\n它适用于计算**速率、比例**等涉及**倒数关系**的平均值，例如平均速度、并联电阻等。调和平均数总是**不大于算术平均数**（\\( H \\leq G \\leq A \\)，其中 \\( G \\) 是几何平均数，\\( A \\) 是算术平均数）。"
          }
        ],
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": ""
        }
      }
    },
    {
      "name": "交互测试",
      "icon": "icon-robot",
      "type": "blank",
      "componentIndex": 3,
      "storage": {
        "messages": [
          {
            "role": "user",
            "content": "如何让 mardown-it 支持渲染出来的编程语言自带语法高亮"
          },
          {
            "role": "assistant",
            "content": "要让 `markdown-it` 渲染的代码块自带语法高亮，你可以通过以下步骤实现：\n\n---\n\n### 1. **安装必要的依赖**\n首先确保已安装 `markdown-it` 和语法高亮库（如 `highlight.js` 或 `prismjs`）：\n```bash\nnpm install markdown-it highlight.js\n# 或\nnpm install markdown-it prismjs\n```\n\n---\n\n### 2. **配置 markdown-it 启用代码高亮**\n#### 方案一：使用 `highlight.js`（推荐）\n```javascript\nconst md = require('markdown-it')({\n  highlight: function (str, lang) {\n    if (lang && require('highlight.js').getLanguage(lang)) {\n      try {\n        return require('highlight.js').highlight(str, { language: lang }).value;\n      } catch (__) {}\n    }\n    return ''; // 使用默认转义\n  }\n});\n```\n\n#### 方案二：使用 `prismjs`\n```javascript\nconst md = require('markdown-it')({\n  highlight: function (str, lang) {\n    if (lang && require('prismjs').languages[lang]) {\n      try {\n        return require('prismjs').highlight(str, require('prismjs').languages[lang], lang);\n      } catch (__) {}\n    }\n    return ''; // 使用默认转义\n  }\n});\n```\n\n---\n\n### 3. **引入高亮样式**\n语法高亮需要对应的 CSS 样式文件，可以通过以下方式引入：\n#### 对于 `highlight.js`：\n- 从 [highlight.js 主题库](https://highlightjs.org/static/demo/) 选择样式，然后在 HTML 中引入：\n  ```html\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/atom-one-dark.min.css\">\n  ```\n\n#### 对于 `prismjs`：\n- 从 [Prism 主题库](https://prismjs.com/) 下载样式，或在 HTML 中引入：\n  ```html\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css\">\n  ```\n\n---\n\n### 4. **渲染 Markdown 内容**\n```javascript\nconst result = md.render('```js\\nconsole.log(\"Hello\");\\n```');\nconsole.log(result);\n```\n输出会包含语法高亮的 HTML（如 `<span class=\"hljs-keyword\">console</span>`）。\n\n---\n\n### 5. **可选：自定义高亮逻辑**\n如果需要更复杂的处理（如行号、错误提示），可以修改 `highlight` 函数：\n```javascript\nhighlight: function (str, lang) {\n  if (lang === 'mermaid') {\n    return `<div class=\"mermaid\">${str}</div>`; // 特殊处理 Mermaid 图表\n  }\n  // ...默认高亮逻辑\n}\n```\n\n---\n\n### 6. **在浏览器中使用**\n如果在前端使用，确保通过 CDN 或打包工具引入库：\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/markdown-it/13.0.2/markdown-it.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n<script>\n  const md = window.markdownit({\n    highlight: (str, lang) => {\n      if (lang && hljs.getLanguage(lang)) {\n        return hljs.highlight(str, { language: lang }).value;\n      }\n      return '';\n    }\n  });\n</script>\n```\n\n---\n\n### 常见问题\n- **语言未高亮？** 检查是否安装了对应的语言包（如 `highlight.js` 可能需要额外加载语言模块）。\n- **样式不生效？** 确认 CSS 文件路径正确且未被其他样式覆盖。\n\n通过以上步骤，`markdown-it` 渲染的代码块将自动支持语法高亮。"
          },
          {
            "role": "user",
            "content": "markdown-it 如何让生成的"
          },
          {
            "role": "assistant",
            "content": "要让 `markdown-it` 生成的代码块支持语法高亮，你需要结合语法高亮库（如 `highlight.js` 或 `Prism.js`）进行配置。以下是详细步骤：\n\n---\n\n## **1. 安装依赖**\n首先，确保安装了 `markdown-it` 和语法高亮库（如 `highlight.js` 或 `Prism.js`）：\n\n### **使用 `highlight.js`**\n```bash\nnpm install markdown-it highlight.js\n```\n### **使用 `Prism.js`**\n```bash\nnpm install markdown-it prismjs\n```\n\n---\n\n## **2. 配置 `markdown-it` 启用语法高亮**\n### **方案 1：使用 `highlight.js`（推荐）**\n```javascript\nconst md = require(\"markdown-it\")({\n  highlight: function (str, lang) {\n    if (lang && require(\"highlight.js\").getLanguage(lang)) {\n      try {\n        return require(\"highlight.js\").highlight(str, { language: lang }).value;\n      } catch (err) {\n        console.error(\"语法高亮失败:\", err);\n      }\n    }\n    return \"\"; // 使用默认的转义\n  },\n});\n```\n### **方案 2：使用 `Prism.js`**\n```javascript\nconst md = require(\"markdown-it\")({\n  highlight: function (str, lang) {\n    if (lang && require(\"prismjs\").languages[lang]) {\n      try {\n        return require(\"prismjs\").highlight(str, require(\"prismjs\").languages[lang], lang);\n      } catch (err) {\n        console.error(\"语法高亮失败:\", err);\n      }\n    }\n    return \"\"; // 使用默认的转义\n  },\n});\n```\n\n---\n\n## **3. 引入高亮样式**\n语法高亮需要对应的 CSS 样式文件，你可以：\n### **`highlight.js` 样式**\n```html\n<!-- 选择一个主题，如 atom-one-dark -->\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/atom-one-dark.min.css\"\n/>\n```\n### **`Prism.js` 样式**\n```html\n<!-- 选择一个主题，如 prism-tomorrow -->\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css\"\n/>\n```\n\n---\n\n## **4. 渲染 Markdown**\n```javascript\nconst markdownText = `\n\\`\\`\\`javascript\nconsole.log(\"Hello, World!\");\n\\`\\`\\`\n`;\n\nconst htmlOutput = md.render(markdownText);\nconsole.log(htmlOutput);\n```\n输出：\n```html\n<pre><code class=\"language-javascript\"><span class=\"hljs-built_in\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"Hello, World!\"</span>);</code></pre>\n```\n\n---\n\n## **5. 在浏览器中使用**\n如果你在前端使用 `markdown-it`，可以这样加载：\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/markdown-it/13.0.2/markdown-it.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n<script>\n  const md = window.markdownit({\n    highlight: function (str, lang) {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          return hljs.highlight(str, { language: lang }).value;\n        } catch (err) {\n          console.error(\"语法高亮失败:\", err);\n        }\n      }\n      return \"\";\n    },\n  });\n  const html = md.render(\"```js\\nconsole.log('Hello');\\n```\");\n  document.body.innerHTML = html;\n  hljs.highlightAll(); // 确保动态加载的代码块也能高亮\n</script>\n```\n\n---\n\n## **6. 高级用法**\n### **（1）自定义高亮**\n```javascript\nhighlight: function (str, lang) {\n  if (lang === \"mermaid\") {\n    return `<div class=\"mermaid\">${str}</div>`; // 特殊处理 Mermaid 图表\n  }\n  // 其他语言的高亮逻辑\n  // ...\n}\n```\n### **（2）行号支持**\n使用 `highlight.js` + `highlightjs-line-numbers.js`：\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlightjs-line-numbers.js/2.8.0/highlightjs-line-numbers.min.js\"></script>\n<script>\n  hljs.highlightAll();\n  hljs.initLineNumbersOnLoad();\n</script>\n```\n\n---\n\n## **7. 常见问题**\n### **（1）某些语言不高亮？**\n- `highlight.js` 默认只支持部分语言，其他语言需要额外引入：\n  ```html\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/languages/go.min.js\"></script>\n  ```\n- `Prism.js` 需要手动加载语言：\n  ```javascript\n  require(\"prismjs/components/prism-go\");\n  ```\n\n### **（2）样式不生效？**\n- 确保 CSS 文件正确加载。\n- 检查是否有其他样式覆盖。\n\n---\n\n## **总结**\n| 步骤 | 操作 |\n|------|------|\n| 1. 安装依赖 | `npm install markdown-it highlight.js` |\n| 2. 配置高亮 | 在 `markdown-it` 的 `highlight` 回调中使用 `highlight.js` 或 `Prism.js` |\n| 3. 引入样式 | 加载对应的 CSS 文件 |\n| 4. 渲染 Markdown | `md.render(\"```js\\nconsole.log('Hi');\\n```\")` |\n| 5. 浏览器支持 | 确保 `hljs.highlightAll()` 执行 |\n\n这样，`markdown-it` 生成的代码块就会自动带有语法高亮！ 🎨"
          }
        ],
        "settings": {
          "modelIndex": 0,
          "enableTools": true,
          "enableWebSearch": false,
          "temperature": 0.7,
          "contextLength": 10,
          "systemPrompt": ""
        }
      }
    }
  ]
}